AWSTemplateFormatVersion: '2010-09-09'
Description: Shoe Repair API - Lambda + API Gateway + DynamoDB
Parameters:
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket with Lambda code
  LambdaS3Key:
    Type: String
    Description: S3 key for Lambda code zip
Resources:
  ShoeRepairApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ShoeRepairApiFunction
      Handler: handler.handler
      Runtime: nodejs18.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      MemorySize: 256
      Timeout: 10
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref ShoeRepairClientesTable
          AWS_REGION: !Ref AWS::Region
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
  ShoeRepairClientesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShoeRepairClientes
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  ShoeRepairApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ShoeRepairApi
  ShoeRepairApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ShoeRepairApi.RootResourceId
      PathPart: '{proxy+}'
      RestApiId: !Ref ShoeRepairApi
  ShoeRepairApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      ResourceId: !Ref ShoeRepairApiResource
      RestApiId: !Ref ShoeRepairApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub:
            - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
            - { LambdaArn: !GetAtt ShoeRepairApiFunction.Arn }
  LambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ShoeRepairApiFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ShoeRepairApi}/*/*/*
Outputs:
  ApiUrl:
    Description: "Invoke URL for API Gateway"
    Value:
      Fn::Sub: https://${ShoeRepairApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
