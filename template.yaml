AWSTemplateFormatVersion: '2010-09-09'
Description: Shoe Repair API - Lambda + API Gateway + DynamoDB
Parameters:
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket with Lambda code
  LambdaS3Key:
    Type: String
    Description: S3 key for Lambda code zip
Resources:
  ShoeRepairApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ShoeRepairApiFunction
      Handler: handler.handler
      Runtime: nodejs18.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      MemorySize: 256
      Timeout: 10
      Environment:
        Variables:
          DYNAMODB_CLIENTE_TABLE: !Ref ShoeRepairClientesTable
          DYNAMODB_PEDIDO_TABLE: !Ref ShoeRepairPedidosTable
          S3_BUCKET_NAME: !Ref ShoeRepairFotosBucket
          DYNAMODB_USER_TABLE: !Ref ShoeRepairUsersTable
          JWT_SECRET: !Ref JWTSecret
          REFRESH_SECRET: !Ref RefreshSecret
          JWT_EXPIRES: !Ref JWTExpires
          REFRESH_EXPIRES: !Ref RefreshExpires
  JWTSecret:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /shoe-repair-api/jwt-secret
      Type: String
      Value: 2b1e7c7e-8e2a-4c3a-9f7d-7e8b2e1c9f3a

  RefreshSecret:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /shoe-repair-api/refresh-secret
      Type: String
      Value: 7e4d2c1b-3a9f-4e8b-8c2a-1f7d2e3b4c5a

  JWTExpires:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /shoe-repair-api/jwt-expires
      Type: String
      Value: 15m

  RefreshExpires:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /shoe-repair-api/refresh-expires
      Type: String
      Value: 7d
  ShoeRepairFotosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'shoe-repair-fotos-${AWS::AccountId}-${AWS::Region}'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - '*'
            MaxAge: 3000
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:aws:s3:::${ShoeRepairFotosBucket}/*'
  ShoeRepairClientesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShoeRepairClientes
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  ShoeRepairUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShoeRepairUsers
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
  ShoeRepairPedidosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShoeRepairPedidos
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  ShoeRepairApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ShoeRepairApi
  ShoeRepairApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ShoeRepairApi.RootResourceId
      PathPart: '{proxy+}'
      RestApiId: !Ref ShoeRepairApi
  ShoeRepairApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      ResourceId: !Ref ShoeRepairApiResource
      RestApiId: !Ref ShoeRepairApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub:
            - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
            - { LambdaArn: !GetAtt ShoeRepairApiFunction.Arn }
  LambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ShoeRepairApiFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ShoeRepairApi}/*/*/*
Outputs:
  ApiUrl:
    Description: "Invoke URL for API Gateway"
    Value:
      Fn::Sub: https://${ShoeRepairApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
